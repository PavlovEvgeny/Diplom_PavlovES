
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	Если ЭтоНовый() Тогда
		ШаблонСообщения = СтрШаблон("Получена заявка от %1 от клиента %2. Период для проведения работ: %3 - %4. Специалист %5", 
									Дата, Клиент, ВремяНачалаРабот,
									ВремяОкончанияРабот, Специалист);
		Уведомление = Справочники.ВКМ_УведомленияТелеграмБотуДляОтправки.СоздатьЭлемент();
		Уведомление.Текст = ШаблонСообщения;
		Уведомление.Записать();
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВКМ_ОбслуживаниеКлиента.Дата КАК Дата,
			|	ВКМ_ОбслуживаниеКлиента.Номер КАК НомерЗаявки,
			|	ВКМ_ОбслуживаниеКлиента.Клиент КАК Клиент,
			|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРабот КАК ВремяНачалаРабот,
			|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРабот КАК ВремяОкончанияРабот,
			|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
			|	ВКМ_ОбслуживаниеКлиента.ОписаниеПроблемы КАК ОписаниеПроблемы
			|ИЗ
			|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
			|ГДЕ
			|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
			Если 
				Дата <> ВыборкаДетальныеЗаписи.Дата
				Или ВремяНачалаРабот <> ВыборкаДетальныеЗаписи.ВремяНачалаРабот
				Или ВремяОкончанияРабот <> ВыборкаДетальныеЗаписи.ВремяОкончанияРабот
				Или Специалист <> ВыборкаДетальныеЗаписи.Специалист Тогда
					ШаблонСообщения = СтрШаблон("В заявку от %1 от клиента %2 внесены изменения. Период для проведения работ: %3 - %4. Специалист %5", 
											Дата, Клиент, ВремяНачалаРабот,
									ВремяОкончанияРабот, Специалист);
					Уведомление = Справочники.ВКМ_УведомленияТелеграмБотуДляОтправки.СоздатьЭлемент();
					Уведомление.Текст = ШаблонСообщения;
					Уведомление.Записать();
			КонецЕсли;
		
		КонецЦикла;	
	
	ВКМ_Телеграмм.ОтправитьСообщение();
	
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту КАК ЧасыКОплатеКлиенту,
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ЧасыФакт
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Клиент КАК Клиент,
		|	ВКМ_ОбслуживаниеКлиента.Договор КАК Договор,
		|	ВТ_ЧасыФакт.ЧасыКОплатеКлиенту КАК ЧасыКОплатеКлиенту,
		|	ВКМ_ОбслуживаниеКлиента.Дата КАК Дата,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
		|	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЧасыФакт КАК ВТ_ЧасыФакт
		|		ПО ВКМ_ОбслуживаниеКлиента.Ссылка = ВТ_ЧасыФакт.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
		|ПОМЕСТИТЬ ВТ_УсловияОплаты
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	ВТ_ДанныеДокумента.Клиент КАК Клиент,
		|	ВТ_ДанныеДокумента.Договор КАК Договор,
		|	ВТ_ДанныеДокумента.Специалист КАК Специалист,
		|	СУММА(ВТ_ДанныеДокумента.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту,
		|	СУММА(ВТ_ДанныеДокумента.ЧасыКОплатеКлиенту * ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы) КАК СуммаОплатыКлиенту,
		|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
		|	ВТ_ДанныеДокумента.Дата КАК ДатаДокумента,
		|	ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора КАК ДатаНачала,
		|	ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора КАК ДатаОкончания,
		|	ВТ_УсловияОплаты.ПроцентОтРабот КАК ПроцентОтРабот,
		|	СУММА(ВТ_ДанныеДокумента.ЧасыКОплатеКлиенту * ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы * ВТ_УсловияОплаты.ПроцентОтРабот / 100) КАК СуммаОплатыСпециалисту,
		|	ВТ_ДанныеДокумента.Ссылка КАК Ссылка
		|ИЗ
		|	ВТ_УсловияОплаты КАК ВТ_УсловияОплаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|			ПО (ВТ_ДанныеДокумента.Договор = ДоговорыКонтрагентов.Ссылка)
		|		ПО (ВТ_ДанныеДокумента.Специалист = ВТ_УсловияОплаты.Сотрудник)
		|ГДЕ
		|	ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
		|	И ВТ_ДанныеДокумента.Дата МЕЖДУ ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора И ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора
		|	И ВТ_ДанныеДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы,
		|	ВТ_ДанныеДокумента.Клиент,
		|	ВТ_ДанныеДокумента.Договор,
		|	ВТ_ДанныеДокумента.Специалист,
		|	ДоговорыКонтрагентов.ВидДоговора,
		|	ВТ_ДанныеДокумента.Дата,
		|	ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора,
		|	ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора,
		|	ВТ_УсловияОплаты.ПроцентОтРабот,
		|	ВТ_ДанныеДокумента.Ссылка";
	
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
		
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СуммаКОплатеКлиенту = ВыборкаДетальныеЗаписи.СуммаОплатыКлиенту;
		СуммаКОплатеСпециалисту = ВыборкаДетальныеЗаписи.СуммаОплатыСпециалисту;
						
		// регистр ВКМ_ВыполненныеКлиентуРаботы
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ВыборкаДетальныеЗаписи.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = СуммаКОплатеКлиенту;
		
		// регистр ВКМ_ВыполненныеСотрудникомРаботы
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Специалист;
		Движение.ЧасовКОплате = ВыборкаДетальныеЗаписи.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = СуммаКОплатеСпециалисту; 
	
		Если Не (Дата >= ВыборкаДетальныеЗаписи.ДатаНачала И
				Дата <= ВыборкаДетальныеЗаписи.ДатаОкончания) Тогда
			Отказ = Истина;
			ШаблонСообщения = СтрШаблон("Дата документа не соответствует периоду действия договора! Договор действует с %1 по %2", ВыборкаДетальныеЗаписи.ДатаНачала, ВыборкаДетальныеЗаписи.ДатаОкончания);
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ШаблонСообщения;
			Сообщение.Сообщить();
		КонецЕсли;
	
		Если ВыборкаДетальныеЗаписи.ПроцентОтРабот = Неопределено Тогда
			Отказ = Истина;
			ШаблонСообщения = СтрШаблон("Сотруднику %1 не установлен процент платы выполненных работ!", ВыборкаДетальныеЗаписи.Специалист);
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ШаблонСообщения;
			Сообщение.Сообщить();
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти